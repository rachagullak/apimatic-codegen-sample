/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat;

import com.yapstone.apiuat.controllers.*;
import com.yapstone.apiuat.http.client.HttpClient;

public class YapstoneStagedOnBoardingServicesClient {
    /**
     * Singleton access to IndividualApplicants controller
     * @return	Returns the IndividualApplicantsController instance 
     */
    public IndividualApplicantsController getIndividualApplicants() {
        return IndividualApplicantsController.getInstance();
    }

    /**
     * Singleton access to BusinessApplicants controller
     * @return	Returns the BusinessApplicantsController instance 
     */
    public BusinessApplicantsController getBusinessApplicants() {
        return BusinessApplicantsController.getInstance();
    }

    /**
     * Singleton access to Merchants controller
     * @return	Returns the MerchantsController instance 
     */
    public MerchantsController getMerchants() {
        return MerchantsController.getInstance();
    }

    /**
     * Singleton access to Assets controller
     * @return	Returns the AssetsController instance 
     */
    public AssetsController getAssets() {
        return AssetsController.getInstance();
    }

    /**
     * Singleton access to PayoutInstruments controller
     * @return	Returns the PayoutInstrumentsController instance 
     */
    public PayoutInstrumentsController getPayoutInstruments() {
        return PayoutInstrumentsController.getInstance();
    }

    /**
     * Singleton access to Instruments controller
     * @return	Returns the InstrumentsController instance 
     */
    public InstrumentsController getInstruments() {
        return InstrumentsController.getInstance();
    }

    /**
     * Singleton access to MarketplaceProducts controller
     * @return	Returns the MarketplaceProductsController instance 
     */
    public MarketplaceProductsController getMarketplaceProducts() {
        return MarketplaceProductsController.getInstance();
    }

    /**
     * Singleton access to PayoutProducts controller
     * @return	Returns the PayoutProductsController instance 
     */
    public PayoutProductsController getPayoutProducts() {
        return PayoutProductsController.getInstance();
    }

    /**
     * Singleton access to Contracts controller
     * @return	Returns the ContractsController instance 
     */
    public ContractsController getContracts() {
        return ContractsController.getInstance();
    }

    /**
     * Singleton access to Marketplaces controller
     * @return	Returns the MarketplacesController instance 
     */
    public MarketplacesController getMarketplaces() {
        return MarketplacesController.getInstance();
    }

    /**
     * Singleton access to Payouts controller
     * @return	Returns the PayoutsController instance 
     */
    public PayoutsController getPayouts() {
        return PayoutsController.getInstance();
    }

    /**
     * Singleton access to Customers controller
     * @return	Returns the CustomersController instance 
     */
    public CustomersController getCustomers() {
        return CustomersController.getInstance();
    }

    /**
     * Singleton access to CustomersAdmin controller
     * @return	Returns the CustomersAdminController instance 
     */
    public CustomersAdminController getCustomersAdmin() {
        return CustomersAdminController.getInstance();
    }

    /**
     * Singleton access to History controller
     * @return	Returns the HistoryController instance 
     */
    public HistoryController getHistory() {
        return HistoryController.getInstance();
    }

    /**
     * Singleton access to Admin controller
     * @return	Returns the AdminController instance 
     */
    public AdminController getAdmin() {
        return AdminController.getInstance();
    }

    /**
     * Singleton access to Offerings controller
     * @return	Returns the OfferingsController instance 
     */
    public OfferingsController getOfferings() {
        return OfferingsController.getInstance();
    }

    /**
     * Singleton access to Search controller
     * @return	Returns the SearchController instance 
     */
    public SearchController getSearch() {
        return SearchController.getInstance();
    }

    /**
     * Get the shared http client currently being used for API calls
     * @return The http client instance currently being used
     */
    public HttpClient getSharedHttpClient() {
        return BaseController.getClientInstance();
    }
    
    /**
     * Set a shared http client to be used for API calls
     * @param httpClient The http client to use
     */
    public void setSharedHttpClient(HttpClient httpClient) {
        BaseController.setClientInstance(httpClient);
    }

    /**
     * Default constructor 
     */     
    public YapstoneStagedOnBoardingServicesClient() {
    }

    /**
     * Client initialization constructor 
     */     
    public YapstoneStagedOnBoardingServicesClient(String authorization) {
        this();
        Configuration.authorization = authorization;
    }
}