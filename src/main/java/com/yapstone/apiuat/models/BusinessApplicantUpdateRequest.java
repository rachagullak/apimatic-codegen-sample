/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@JsonInclude(Include.ALWAYS)
public class BusinessApplicantUpdateRequest 
        implements java.io.Serializable {
    private static final long serialVersionUID = -8618897347889721658L;
    private PrimaryContactResource primaryContact;
    private BusinessProfileResource businessProfile;
    private String externalId;
    private MarketPlaceApplicantResource mktPlaceApplicant;
    private List<SocialNetworkResource> socialNetworks;
    private EntityProductStatusResource status;
    private ApplicantOperationalStatus operationalStatus;
    private List<ApplicantConsentRequest> consents;
    private BeneficialOwnerResource principalOwner;
    private List<BeneficialOwnersPatch> additionalOwnersUpdate;
    private List<ProductEnum> products;
    private Boolean noPostBooking;
    private String language;
    private String brand;
    private String primaryInstrument;
    private Object metadata;
    private ProCategoryResource proCategory;
    /** GETTER
     * User primary contact information. Contains data about the person such as name, address, phone, email, etc.
     */
    @JsonGetter("primaryContact")
    public PrimaryContactResource getPrimaryContact ( ) { 
        return this.primaryContact;
    }
    
    /** SETTER
     * User primary contact information. Contains data about the person such as name, address, phone, email, etc.
     */
    @JsonSetter("primaryContact")
    public void setPrimaryContact (PrimaryContactResource value) { 
        this.primaryContact = value;
    }
 
    /** GETTER
     * Business profile information. Contains information such as doing business as, taxId fo the business, etc.
     */
    @JsonGetter("businessProfile")
    public BusinessProfileResource getBusinessProfile ( ) { 
        return this.businessProfile;
    }
    
    /** SETTER
     * Business profile information. Contains information such as doing business as, taxId fo the business, etc.
     */
    @JsonSetter("businessProfile")
    public void setBusinessProfile (BusinessProfileResource value) { 
        this.businessProfile = value;
    }
 
    /** GETTER
     * The partners externalId id for the Business Applicant.
     */
    @JsonGetter("externalId")
    public String getExternalId ( ) { 
        return this.externalId;
    }
    
    /** SETTER
     * The partners externalId id for the Business Applicant.
     */
    @JsonSetter("externalId")
    public void setExternalId (String value) { 
        this.externalId = value;
    }
 
    /** GETTER
     * Market Place applicant information. Includes the customers history and the subscription type.
     */
    @JsonGetter("mktPlaceApplicant")
    public MarketPlaceApplicantResource getMktPlaceApplicant ( ) { 
        return this.mktPlaceApplicant;
    }
    
    /** SETTER
     * Market Place applicant information. Includes the customers history and the subscription type.
     */
    @JsonSetter("mktPlaceApplicant")
    public void setMktPlaceApplicant (MarketPlaceApplicantResource value) { 
        this.mktPlaceApplicant = value;
    }
 
    /** GETTER
     * A list of social networks the applicant belongs to.
     */
    @JsonGetter("socialNetworks")
    public List<SocialNetworkResource> getSocialNetworks ( ) { 
        return this.socialNetworks;
    }
    
    /** SETTER
     * A list of social networks the applicant belongs to.
     */
    @JsonSetter("socialNetworks")
    public void setSocialNetworks (List<SocialNetworkResource> value) { 
        this.socialNetworks = value;
    }
 
    /** GETTER
     * The status of the entity.
     */
    @JsonGetter("status")
    public EntityProductStatusResource getStatus ( ) { 
        return this.status;
    }
    
    /** SETTER
     * The status of the entity.
     */
    @JsonSetter("status")
    public void setStatus (EntityProductStatusResource value) { 
        this.status = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("operationalStatus")
    public ApplicantOperationalStatus getOperationalStatus ( ) { 
        return this.operationalStatus;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("operationalStatus")
    public void setOperationalStatus (ApplicantOperationalStatus value) { 
        this.operationalStatus = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("consents")
    public List<ApplicantConsentRequest> getConsents ( ) { 
        return this.consents;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("consents")
    public void setConsents (List<ApplicantConsentRequest> value) { 
        this.consents = value;
    }
 
    /** GETTER
     * Beneficial owner resource object.
     */
    @JsonGetter("principalOwner")
    public BeneficialOwnerResource getPrincipalOwner ( ) { 
        return this.principalOwner;
    }
    
    /** SETTER
     * Beneficial owner resource object.
     */
    @JsonSetter("principalOwner")
    public void setPrincipalOwner (BeneficialOwnerResource value) { 
        this.principalOwner = value;
    }
 
    /** GETTER
     * List of edits to beneficial owners of the property.
     */
    @JsonGetter("additionalOwnersUpdate")
    public List<BeneficialOwnersPatch> getAdditionalOwnersUpdate ( ) { 
        return this.additionalOwnersUpdate;
    }
    
    /** SETTER
     * List of edits to beneficial owners of the property.
     */
    @JsonSetter("additionalOwnersUpdate")
    public void setAdditionalOwnersUpdate (List<BeneficialOwnersPatch> value) { 
        this.additionalOwnersUpdate = value;
    }
 
    /** GETTER
     * Products requested by marketplace.
     */
    @JsonGetter("products")
    public List<ProductEnum> getProducts ( ) { 
        return this.products;
    }
    
    /** SETTER
     * Products requested by marketplace.
     */
    @JsonSetter("products")
    public void setProducts (List<ProductEnum> value) { 
        this.products = value;
    }
 
    /** GETTER
     * value can be changed by only internal user.
     */
    @JsonGetter("noPostBooking")
    public Boolean getNoPostBooking ( ) { 
        return this.noPostBooking;
    }
    
    /** SETTER
     * value can be changed by only internal user.
     */
    @JsonSetter("noPostBooking")
    public void setNoPostBooking (Boolean value) { 
        this.noPostBooking = value;
    }
 
    /** GETTER
     * language used to communicate
     */
    @JsonGetter("language")
    public String getLanguage ( ) { 
        return this.language;
    }
    
    /** SETTER
     * language used to communicate
     */
    @JsonSetter("language")
    public void setLanguage (String value) { 
        this.language = value;
    }
 
    /** GETTER
     * brand id of market place
     */
    @JsonGetter("brand")
    public String getBrand ( ) { 
        return this.brand;
    }
    
    /** SETTER
     * brand id of market place
     */
    @JsonSetter("brand")
    public void setBrand (String value) { 
        this.brand = value;
    }
 
    /** GETTER
     * The primary instrument of the applicant. By default, all the applicant level offerings will be linked to this instrument.
     */
    @JsonGetter("primaryInstrument")
    public String getPrimaryInstrument ( ) { 
        return this.primaryInstrument;
    }
    
    /** SETTER
     * The primary instrument of the applicant. By default, all the applicant level offerings will be linked to this instrument.
     */
    @JsonSetter("primaryInstrument")
    public void setPrimaryInstrument (String value) { 
        this.primaryInstrument = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("metadata")
    public Object getMetadata ( ) { 
        return this.metadata;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("metadata")
    public void setMetadata (Object value) { 
        this.metadata = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("proCategory")
    public ProCategoryResource getProCategory ( ) { 
        return this.proCategory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("proCategory")
    public void setProCategory (ProCategoryResource value) { 
        this.proCategory = value;
    }
 
}
