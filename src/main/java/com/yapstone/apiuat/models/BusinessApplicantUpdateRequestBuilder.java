/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;

public class BusinessApplicantUpdateRequestBuilder {
    //the instance to build
    private BusinessApplicantUpdateRequest businessApplicantUpdateRequest;

    /**
     * Default constructor to initialize the instance
     */
    public BusinessApplicantUpdateRequestBuilder() {
        businessApplicantUpdateRequest = new BusinessApplicantUpdateRequest();
    }

    /**
     * User primary contact information. Contains data about the person such as name, address, phone, email, etc.
     */
    public BusinessApplicantUpdateRequestBuilder primaryContact(PrimaryContactResource primaryContact) {
        businessApplicantUpdateRequest.setPrimaryContact(primaryContact);
        return this;
    }

    /**
     * Business profile information. Contains information such as doing business as, taxId fo the business, etc.
     */
    public BusinessApplicantUpdateRequestBuilder businessProfile(BusinessProfileResource businessProfile) {
        businessApplicantUpdateRequest.setBusinessProfile(businessProfile);
        return this;
    }

    /**
     * The partners externalId id for the Business Applicant.
     */
    public BusinessApplicantUpdateRequestBuilder externalId(String externalId) {
        businessApplicantUpdateRequest.setExternalId(externalId);
        return this;
    }

    /**
     * Market Place applicant information. Includes the customers history and the subscription type.
     */
    public BusinessApplicantUpdateRequestBuilder mktPlaceApplicant(MarketPlaceApplicantResource mktPlaceApplicant) {
        businessApplicantUpdateRequest.setMktPlaceApplicant(mktPlaceApplicant);
        return this;
    }

    /**
     * A list of social networks the applicant belongs to.
     */
    public BusinessApplicantUpdateRequestBuilder socialNetworks(List<SocialNetworkResource> socialNetworks) {
        businessApplicantUpdateRequest.setSocialNetworks(socialNetworks);
        return this;
    }

    /**
     * The status of the entity.
     */
    public BusinessApplicantUpdateRequestBuilder status(EntityProductStatusResource status) {
        businessApplicantUpdateRequest.setStatus(status);
        return this;
    }

    public BusinessApplicantUpdateRequestBuilder operationalStatus(ApplicantOperationalStatus operationalStatus) {
        businessApplicantUpdateRequest.setOperationalStatus(operationalStatus);
        return this;
    }

    public BusinessApplicantUpdateRequestBuilder consents(List<ApplicantConsentRequest> consents) {
        businessApplicantUpdateRequest.setConsents(consents);
        return this;
    }

    /**
     * Beneficial owner resource object.
     */
    public BusinessApplicantUpdateRequestBuilder principalOwner(BeneficialOwnerResource principalOwner) {
        businessApplicantUpdateRequest.setPrincipalOwner(principalOwner);
        return this;
    }

    /**
     * List of edits to beneficial owners of the property.
     */
    public BusinessApplicantUpdateRequestBuilder additionalOwnersUpdate(List<BeneficialOwnersPatch> additionalOwnersUpdate) {
        businessApplicantUpdateRequest.setAdditionalOwnersUpdate(additionalOwnersUpdate);
        return this;
    }

    /**
     * Products requested by marketplace.
     */
    public BusinessApplicantUpdateRequestBuilder products(List<ProductEnum> products) {
        businessApplicantUpdateRequest.setProducts(products);
        return this;
    }

    /**
     * value can be changed by only internal user.
     */
    public BusinessApplicantUpdateRequestBuilder noPostBooking(Boolean noPostBooking) {
        businessApplicantUpdateRequest.setNoPostBooking(noPostBooking);
        return this;
    }

    /**
     * language used to communicate
     */
    public BusinessApplicantUpdateRequestBuilder language(String language) {
        businessApplicantUpdateRequest.setLanguage(language);
        return this;
    }

    /**
     * brand id of market place
     */
    public BusinessApplicantUpdateRequestBuilder brand(String brand) {
        businessApplicantUpdateRequest.setBrand(brand);
        return this;
    }

    /**
     * The primary instrument of the applicant. By default, all the applicant level offerings will be linked to this instrument.
     */
    public BusinessApplicantUpdateRequestBuilder primaryInstrument(String primaryInstrument) {
        businessApplicantUpdateRequest.setPrimaryInstrument(primaryInstrument);
        return this;
    }

    public BusinessApplicantUpdateRequestBuilder metadata(Object metadata) {
        businessApplicantUpdateRequest.setMetadata(metadata);
        return this;
    }

    public BusinessApplicantUpdateRequestBuilder proCategory(ProCategoryResource proCategory) {
        businessApplicantUpdateRequest.setProCategory(proCategory);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public BusinessApplicantUpdateRequest build() {
        return businessApplicantUpdateRequest;
    }
}