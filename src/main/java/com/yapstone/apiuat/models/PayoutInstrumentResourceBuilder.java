/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;

public class PayoutInstrumentResourceBuilder {
    //the instance to build
    private PayoutInstrumentResource payoutInstrumentResource;

    /**
     * Default constructor to initialize the instance
     */
    public PayoutInstrumentResourceBuilder() {
        payoutInstrumentResource = new PayoutInstrumentResource();
    }

    /**
     * The partners externalId id for the Payout Instrument.
     */
    public PayoutInstrumentResourceBuilder externalId(String externalId) {
        payoutInstrumentResource.setExternalId(externalId);
        return this;
    }

    /**
     * The Bank account information.
     */
    public PayoutInstrumentResourceBuilder bankAccount(BankAccountResource bankAccount) {
        payoutInstrumentResource.setBankAccount(bankAccount);
        return this;
    }

    /**
     * Payment card details.
     */
    public PayoutInstrumentResourceBuilder paymentCard(CardDataResource paymentCard) {
        payoutInstrumentResource.setPaymentCard(paymentCard);
        return this;
    }

    /**
     * The type of finanancial instrument [BANK_ACCOUNT]
     */
    public PayoutInstrumentResourceBuilder type(Type2Enum type) {
        payoutInstrumentResource.setType(type);
        return this;
    }

    /**
     * The entity manages the Instrument. It can be merchant or marketplace.
     */
    public PayoutInstrumentResourceBuilder managedBy(List<String> managedBy) {
        payoutInstrumentResource.setManagedBy(managedBy);
        return this;
    }

    /**
     * The resource identifier for the Payout Instrument.
     */
    public PayoutInstrumentResourceBuilder id(String id) {
        payoutInstrumentResource.setId(id);
        return this;
    }

    /**
     * The status of the entity.
     */
    public PayoutInstrumentResourceBuilder status(EntityProductStatusResource status) {
        payoutInstrumentResource.setStatus(status);
        return this;
    }

    public PayoutInstrumentResourceBuilder operationalStatus(InstrumentOperationalStatus operationalStatus) {
        payoutInstrumentResource.setOperationalStatus(operationalStatus);
        return this;
    }

    /**
     * The owner of the asset
     */
    public PayoutInstrumentResourceBuilder owner(OwnerResource owner) {
        payoutInstrumentResource.setOwner(owner);
        return this;
    }

    /**
     * list of consent responses
     */
    public PayoutInstrumentResourceBuilder consents(List<Consent> consents) {
        payoutInstrumentResource.setConsents(consents);
        return this;
    }

    /**
     * Products requested by marketplace.
     */
    public PayoutInstrumentResourceBuilder products(List<ProductEnum> products) {
        payoutInstrumentResource.setProducts(products);
        return this;
    }

    /**
     * Set of capabilities the instrument can perform.
     */
    public PayoutInstrumentResourceBuilder capabilities(List<CapabilityResource> capabilities) {
        payoutInstrumentResource.setCapabilities(capabilities);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public PayoutInstrumentResource build() {
        return payoutInstrumentResource;
    }
}