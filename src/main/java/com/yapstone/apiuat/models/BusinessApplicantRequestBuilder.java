/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;

public class BusinessApplicantRequestBuilder {
    //the instance to build
    private BusinessApplicantRequest businessApplicantRequest;

    /**
     * Default constructor to initialize the instance
     */
    public BusinessApplicantRequestBuilder() {
        businessApplicantRequest = new BusinessApplicantRequest();
    }

    /**
     * User primary contact information. Contains data about the person such as name, address, phone, email, etc.
     */
    public BusinessApplicantRequestBuilder primaryContact(PrimaryContactResource primaryContact) {
        businessApplicantRequest.setPrimaryContact(primaryContact);
        return this;
    }

    /**
     * Business profile information. Contains information such as doing business as, taxId fo the business, etc.
     */
    public BusinessApplicantRequestBuilder businessProfile(BusinessProfileResource businessProfile) {
        businessApplicantRequest.setBusinessProfile(businessProfile);
        return this;
    }

    /**
     * The partners externalId id for the Business Applicant.
     */
    public BusinessApplicantRequestBuilder externalId(String externalId) {
        businessApplicantRequest.setExternalId(externalId);
        return this;
    }

    /**
     * Market Place applicant information. Includes the customers history and the subscription type.
     */
    public BusinessApplicantRequestBuilder mktPlaceApplicant(MarketPlaceApplicantResource mktPlaceApplicant) {
        businessApplicantRequest.setMktPlaceApplicant(mktPlaceApplicant);
        return this;
    }

    /**
     * A list of social networks the applicant belongs to.
     */
    public BusinessApplicantRequestBuilder socialNetworks(List<SocialNetworkResource> socialNetworks) {
        businessApplicantRequest.setSocialNetworks(socialNetworks);
        return this;
    }

    /**
     * language used to communicate
     */
    public BusinessApplicantRequestBuilder language(String language) {
        businessApplicantRequest.setLanguage(language);
        return this;
    }

    /**
     * brand id of market place
     */
    public BusinessApplicantRequestBuilder brand(String brand) {
        businessApplicantRequest.setBrand(brand);
        return this;
    }

    public BusinessApplicantRequestBuilder consents(List<ApplicantConsentRequest> consents) {
        businessApplicantRequest.setConsents(consents);
        return this;
    }

    /**
     * The reportingTag for the applicant.
     */
    public BusinessApplicantRequestBuilder reportingTag(String reportingTag) {
        businessApplicantRequest.setReportingTag(reportingTag);
        return this;
    }

    /**
     * Beneficial Owner Request
     */
    public BusinessApplicantRequestBuilder principalOwner(BeneficialOwnerRequest principalOwner) {
        businessApplicantRequest.setPrincipalOwner(principalOwner);
        return this;
    }

    /**
     * A list of additional beneficial owners
     */
    public BusinessApplicantRequestBuilder additionalOwners(List<BeneficialOwnerRequest> additionalOwners) {
        businessApplicantRequest.setAdditionalOwners(additionalOwners);
        return this;
    }

    /**
     * Products requested by marketplace.
     */
    public BusinessApplicantRequestBuilder products(List<ProductEnum> products) {
        businessApplicantRequest.setProducts(products);
        return this;
    }

    /**
     * The primary instrument of the applicant. By default, all the applicant level offerings will be linked to this instrument.
     */
    public BusinessApplicantRequestBuilder primaryInstrument(String primaryInstrument) {
        businessApplicantRequest.setPrimaryInstrument(primaryInstrument);
        return this;
    }

    public BusinessApplicantRequestBuilder metadata(Object metadata) {
        businessApplicantRequest.setMetadata(metadata);
        return this;
    }

    public BusinessApplicantRequestBuilder proCategory(ProCategoryResource proCategory) {
        businessApplicantRequest.setProCategory(proCategory);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public BusinessApplicantRequest build() {
        return businessApplicantRequest;
    }
}