/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;

public class ApplicantResourceBuilder {
    //the instance to build
    private ApplicantResource applicantResource;

    /**
     * Default constructor to initialize the instance
     */
    public ApplicantResourceBuilder() {
        applicantResource = new ApplicantResource();
    }

    /**
     * The resource identifier for the applicant.
     */
    public ApplicantResourceBuilder id(String id) {
        applicantResource.setId(id);
        return this;
    }

    /**
     * The status of the entity.
     */
    public ApplicantResourceBuilder status(EntityProductStatusResource status) {
        applicantResource.setStatus(status);
        return this;
    }

    public ApplicantResourceBuilder operationalStatus(ApplicantOperationalStatus operationalStatus) {
        applicantResource.setOperationalStatus(operationalStatus);
        return this;
    }

    public ApplicantResourceBuilder type(String type) {
        applicantResource.setType(type);
        return this;
    }

    /**
     * The partners externalId id for the Applicant.
     */
    public ApplicantResourceBuilder externalId(String externalId) {
        applicantResource.setExternalId(externalId);
        return this;
    }

    /**
     * Market Place applicant information. Includes the customers history and the subscription type.
     */
    public ApplicantResourceBuilder mktPlaceApplicant(MarketPlaceApplicantResource mktPlaceApplicant) {
        applicantResource.setMktPlaceApplicant(mktPlaceApplicant);
        return this;
    }

    /**
     * A list of social networks the applicant belongs to.
     */
    public ApplicantResourceBuilder socialNetworks(List<SocialNetworkResource> socialNetworks) {
        applicantResource.setSocialNetworks(socialNetworks);
        return this;
    }

    /**
     * supported language
     */
    public ApplicantResourceBuilder language(String language) {
        applicantResource.setLanguage(language);
        return this;
    }

    /**
     * brand id
     */
    public ApplicantResourceBuilder brand(String brand) {
        applicantResource.setBrand(brand);
        return this;
    }

    public ApplicantResourceBuilder consents(List<ApplicantConsentResource> consents) {
        applicantResource.setConsents(consents);
        return this;
    }

    /**
     * The reportingTag for the applicant.
     */
    public ApplicantResourceBuilder reportingTag(String reportingTag) {
        applicantResource.setReportingTag(reportingTag);
        return this;
    }

    /**
     * At the time of creation, value is defaulted to False.
     */
    public ApplicantResourceBuilder noPostBooking(Boolean noPostBooking) {
        applicantResource.setNoPostBooking(noPostBooking);
        return this;
    }

    /**
     * Products requested by marketplace.
     */
    public ApplicantResourceBuilder products(List<ProductEnum> products) {
        applicantResource.setProducts(products);
        return this;
    }

    public ApplicantResourceBuilder proCategory(ProCategoryResource proCategory) {
        applicantResource.setProCategory(proCategory);
        return this;
    }

    /**
     * The primary instrument of the applicant. By default, all the applicant level offerings will be linked to this instrument.
     */
    public ApplicantResourceBuilder primaryInstrument(String primaryInstrument) {
        applicantResource.setPrimaryInstrument(primaryInstrument);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public ApplicantResource build() {
        return applicantResource;
    }
}