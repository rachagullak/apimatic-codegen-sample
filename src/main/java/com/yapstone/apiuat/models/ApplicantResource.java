/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonSubTypes.Type;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@JsonTypeInfo(
          use = JsonTypeInfo.Id.NAME,
          include = JsonTypeInfo.As.EXISTING_PROPERTY,
          property = "type",
          defaultImpl = ApplicantResource.class,
          visible = true)
@JsonSubTypes({
    @Type(value = IndividualApplicantResource.class, name = "individualApplicantResource"),
    @Type(value = BusinessApplicantResource.class, name = "businessApplicantResource"),
    @Type(value = IndividualApplicantAdminResource.class, name = "individualApplicantAdminResource"),
    @Type(value = BusinessApplicantAdminResource.class, name = "businessApplicantAdminResource")
})
@JsonInclude(Include.ALWAYS)
public class ApplicantResource 
        implements java.io.Serializable {
    private static final long serialVersionUID = 5063764288281184901L;
    private String id;
    private EntityProductStatusResource status;
    private ApplicantOperationalStatus operationalStatus;
    private String type;
    private String externalId;
    private MarketPlaceApplicantResource mktPlaceApplicant;
    private List<SocialNetworkResource> socialNetworks;
    private String language;
    private String brand;
    private List<ApplicantConsentResource> consents;
    private String reportingTag;
    private Boolean noPostBooking = false;
    private List<ProductEnum> products;
    private ProCategoryResource proCategory;
    private String primaryInstrument;
    /** GETTER
     * The resource identifier for the applicant.
     */
    @JsonGetter("id")
    public String getId ( ) { 
        return this.id;
    }
    
    /** SETTER
     * The resource identifier for the applicant.
     */
    @JsonSetter("id")
    public void setId (String value) { 
        this.id = value;
    }
 
    /** GETTER
     * The status of the entity.
     */
    @JsonGetter("status")
    public EntityProductStatusResource getStatus ( ) { 
        return this.status;
    }
    
    /** SETTER
     * The status of the entity.
     */
    @JsonSetter("status")
    public void setStatus (EntityProductStatusResource value) { 
        this.status = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("operationalStatus")
    public ApplicantOperationalStatus getOperationalStatus ( ) { 
        return this.operationalStatus;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("operationalStatus")
    public void setOperationalStatus (ApplicantOperationalStatus value) { 
        this.operationalStatus = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("type")
    public String getType ( ) { 
        return this.type;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("type")
    public void setType (String value) { 
        this.type = value;
    }
 
    /** GETTER
     * The partners externalId id for the Applicant.
     */
    @JsonGetter("externalId")
    public String getExternalId ( ) { 
        return this.externalId;
    }
    
    /** SETTER
     * The partners externalId id for the Applicant.
     */
    @JsonSetter("externalId")
    public void setExternalId (String value) { 
        this.externalId = value;
    }
 
    /** GETTER
     * Market Place applicant information. Includes the customers history and the subscription type.
     */
    @JsonGetter("mktPlaceApplicant")
    public MarketPlaceApplicantResource getMktPlaceApplicant ( ) { 
        return this.mktPlaceApplicant;
    }
    
    /** SETTER
     * Market Place applicant information. Includes the customers history and the subscription type.
     */
    @JsonSetter("mktPlaceApplicant")
    public void setMktPlaceApplicant (MarketPlaceApplicantResource value) { 
        this.mktPlaceApplicant = value;
    }
 
    /** GETTER
     * A list of social networks the applicant belongs to.
     */
    @JsonGetter("socialNetworks")
    public List<SocialNetworkResource> getSocialNetworks ( ) { 
        return this.socialNetworks;
    }
    
    /** SETTER
     * A list of social networks the applicant belongs to.
     */
    @JsonSetter("socialNetworks")
    public void setSocialNetworks (List<SocialNetworkResource> value) { 
        this.socialNetworks = value;
    }
 
    /** GETTER
     * supported language
     */
    @JsonGetter("language")
    public String getLanguage ( ) { 
        return this.language;
    }
    
    /** SETTER
     * supported language
     */
    @JsonSetter("language")
    public void setLanguage (String value) { 
        this.language = value;
    }
 
    /** GETTER
     * brand id
     */
    @JsonGetter("brand")
    public String getBrand ( ) { 
        return this.brand;
    }
    
    /** SETTER
     * brand id
     */
    @JsonSetter("brand")
    public void setBrand (String value) { 
        this.brand = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("consents")
    public List<ApplicantConsentResource> getConsents ( ) { 
        return this.consents;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("consents")
    public void setConsents (List<ApplicantConsentResource> value) { 
        this.consents = value;
    }
 
    /** GETTER
     * The reportingTag for the applicant.
     */
    @JsonGetter("reportingTag")
    public String getReportingTag ( ) { 
        return this.reportingTag;
    }
    
    /** SETTER
     * The reportingTag for the applicant.
     */
    @JsonSetter("reportingTag")
    public void setReportingTag (String value) { 
        this.reportingTag = value;
    }
 
    /** GETTER
     * At the time of creation, value is defaulted to False.
     */
    @JsonGetter("noPostBooking")
    public Boolean getNoPostBooking ( ) { 
        return this.noPostBooking;
    }
    
    /** SETTER
     * At the time of creation, value is defaulted to False.
     */
    @JsonSetter("noPostBooking")
    public void setNoPostBooking (Boolean value) { 
        this.noPostBooking = value;
    }
 
    /** GETTER
     * Products requested by marketplace.
     */
    @JsonGetter("products")
    public List<ProductEnum> getProducts ( ) { 
        return this.products;
    }
    
    /** SETTER
     * Products requested by marketplace.
     */
    @JsonSetter("products")
    public void setProducts (List<ProductEnum> value) { 
        this.products = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("proCategory")
    public ProCategoryResource getProCategory ( ) { 
        return this.proCategory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("proCategory")
    public void setProCategory (ProCategoryResource value) { 
        this.proCategory = value;
    }
 
    /** GETTER
     * The primary instrument of the applicant. By default, all the applicant level offerings will be linked to this instrument.
     */
    @JsonGetter("primaryInstrument")
    public String getPrimaryInstrument ( ) { 
        return this.primaryInstrument;
    }
    
    /** SETTER
     * The primary instrument of the applicant. By default, all the applicant level offerings will be linked to this instrument.
     */
    @JsonSetter("primaryInstrument")
    public void setPrimaryInstrument (String value) { 
        this.primaryInstrument = value;
    }
 
}
