/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

public enum GovernmentIdTypeEnum {
    DRIVERS_LICENSE, //TODO: Write general description for this element
    PASSPORT, //TODO: Write general description for this element
    GOVERNMENT_ID, //TODO: Write general description for this element
    PASSPORT_CARD, //TODO: Write general description for this element
    LAST_FOUR_SSN, //TODO: Write general description for this element
    TAX_ID, //TODO: Write general description for this element
    SIN, //TODO: Write general description for this element
    NIF, //TODO: Write general description for this element
    CODICE_FISCALE; //TODO: Write general description for this element

    private static TreeMap<String, GovernmentIdTypeEnum> valueMap = new TreeMap<String, GovernmentIdTypeEnum>();
    private String value;

    static {
        DRIVERS_LICENSE.value = "DRIVERS_LICENSE";
        PASSPORT.value = "PASSPORT";
        GOVERNMENT_ID.value = "GOVERNMENT_ID";
        PASSPORT_CARD.value = "PASSPORT_CARD";
        LAST_FOUR_SSN.value = "LAST_FOUR_SSN";
        TAX_ID.value = "TAX_ID";
        SIN.value = "SIN";
        NIF.value = "NIF";
        CODICE_FISCALE.value = "CODICE_FISCALE";

        valueMap.put("DRIVERS_LICENSE", DRIVERS_LICENSE);
        valueMap.put("PASSPORT", PASSPORT);
        valueMap.put("GOVERNMENT_ID", GOVERNMENT_ID);
        valueMap.put("PASSPORT_CARD", PASSPORT_CARD);
        valueMap.put("LAST_FOUR_SSN", LAST_FOUR_SSN);
        valueMap.put("TAX_ID", TAX_ID);
        valueMap.put("SIN", SIN);
        valueMap.put("NIF", NIF);
        valueMap.put("CODICE_FISCALE", CODICE_FISCALE);
    }

    /**
     * Returns the enum member associated with the given string value
     * @return The enum member against the given string value */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static GovernmentIdTypeEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member
     * @return The string value against enum member */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of GovernmentIdTypeEnum values to list of string values
     * @param toConvert The list of GovernmentIdTypeEnum values to convert
     * @return List of representative string values */
    public static List<String> toValue(List<GovernmentIdTypeEnum> toConvert) {
        if(toConvert == null)
            return null;
        List<String> convertedValues = new ArrayList<String>();
        for (GovernmentIdTypeEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 