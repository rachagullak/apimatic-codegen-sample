/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;

public class MarketplaceProductAddBuilder {
    //the instance to build
    private MarketplaceProductAdd marketplaceProductAdd;

    /**
     * Default constructor to initialize the instance
     */
    public MarketplaceProductAddBuilder() {
        marketplaceProductAdd = new MarketplaceProductAdd();
    }

    /**
     * An array of consents.
     */
    public MarketplaceProductAddBuilder consents(List<ConsentRequest> consents) {
        marketplaceProductAdd.setConsents(consents);
        return this;
    }

    /**
     * The unique id of the Asset Resource.
     */
    public MarketplaceProductAddBuilder assetId(String assetId) {
        marketplaceProductAdd.setAssetId(assetId);
        return this;
    }

    /**
     * The type of Payout Mode
     */
    public MarketplaceProductAddBuilder payoutMode(PayoutModeEnum payoutMode) {
        marketplaceProductAdd.setPayoutMode(payoutMode);
        return this;
    }

    /**
     * The ISO currency code enum for settlements.
     */
    public MarketplaceProductAddBuilder settlementCurrency(String settlementCurrency) {
        marketplaceProductAdd.setSettlementCurrency(settlementCurrency);
        return this;
    }

    /**
     * Subscription Type
     */
    public MarketplaceProductAddBuilder subscriptionType(String subscriptionType) {
        marketplaceProductAdd.setSubscriptionType(subscriptionType);
        return this;
    }

    /**
     * Primary Instrument for a given Marketplace product.
     */
    public MarketplaceProductAddBuilder primaryInstrument(String primaryInstrument) {
        marketplaceProductAdd.setPrimaryInstrument(primaryInstrument);
        return this;
    }

    public MarketplaceProductAddBuilder payoutInstruments(List<String> payoutInstruments) {
        marketplaceProductAdd.setPayoutInstruments(payoutInstruments);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public MarketplaceProductAdd build() {
        return marketplaceProductAdd;
    }
}