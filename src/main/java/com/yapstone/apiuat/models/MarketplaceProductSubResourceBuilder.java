/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;

public class MarketplaceProductSubResourceBuilder {
    //the instance to build
    private MarketplaceProductSubResource marketplaceProductSubResource;

    /**
     * Default constructor to initialize the instance
     */
    public MarketplaceProductSubResourceBuilder() {
        marketplaceProductSubResource = new MarketplaceProductSubResource();
    }

    /**
     * An array of consents.
     */
    public MarketplaceProductSubResourceBuilder consents(List<ConsentResource> consents) {
        marketplaceProductSubResource.setConsents(consents);
        return this;
    }

    /**
     * The unique id of the Asset Resource.
     */
    public MarketplaceProductSubResourceBuilder assetId(String assetId) {
        marketplaceProductSubResource.setAssetId(assetId);
        return this;
    }

    /**
     * The type of Payout Mode
     */
    public MarketplaceProductSubResourceBuilder payoutMode(PayoutModeEnum payoutMode) {
        marketplaceProductSubResource.setPayoutMode(payoutMode);
        return this;
    }

    /**
     * The ISO currency code enum for settlements.
     */
    public MarketplaceProductSubResourceBuilder settlementCurrency(String settlementCurrency) {
        marketplaceProductSubResource.setSettlementCurrency(settlementCurrency);
        return this;
    }

    /**
     * Subscription Type
     */
    public MarketplaceProductSubResourceBuilder subscriptionType(String subscriptionType) {
        marketplaceProductSubResource.setSubscriptionType(subscriptionType);
        return this;
    }

    /**
     * Primary Instrument for a given Marketplace product.
     */
    public MarketplaceProductSubResourceBuilder primaryInstrument(String primaryInstrument) {
        marketplaceProductSubResource.setPrimaryInstrument(primaryInstrument);
        return this;
    }

    /**
     * The status and reason for the status of the entity.
     */
    public MarketplaceProductSubResourceBuilder status(StatusReasonResource status) {
        marketplaceProductSubResource.setStatus(status);
        return this;
    }

    /**
     * The status of the entity.
     */
    public MarketplaceProductSubResourceBuilder chargesStatus(ActionStatusResource chargesStatus) {
        marketplaceProductSubResource.setChargesStatus(chargesStatus);
        return this;
    }

    /**
     * The status of the entity.
     */
    public MarketplaceProductSubResourceBuilder refundStatus(ActionStatusResource refundStatus) {
        marketplaceProductSubResource.setRefundStatus(refundStatus);
        return this;
    }

    /**
     * The token to use when making payments.
     */
    public MarketplaceProductSubResourceBuilder tokenForProcessing(String tokenForProcessing) {
        marketplaceProductSubResource.setTokenForProcessing(tokenForProcessing);
        return this;
    }

    /**
     * The platform to initiate payments on.
     */
    public MarketplaceProductSubResourceBuilder paymentPlatform(PaymentPlatformEnum paymentPlatform) {
        marketplaceProductSubResource.setPaymentPlatform(paymentPlatform);
        return this;
    }

    /**
     * An array of payout instruments.
     */
    public MarketplaceProductSubResourceBuilder payoutInstruments(List<MarketplaceProductPayoutInstrumentResource> payoutInstruments) {
        marketplaceProductSubResource.setPayoutInstruments(payoutInstruments);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public MarketplaceProductSubResource build() {
        return marketplaceProductSubResource;
    }
}