/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;

public class IndividualApplicantRequestBuilder {
    //the instance to build
    private IndividualApplicantRequest individualApplicantRequest;

    /**
     * Default constructor to initialize the instance
     */
    public IndividualApplicantRequestBuilder() {
        individualApplicantRequest = new IndividualApplicantRequest();
    }

    /**
     * The partners externalId id for the Applicant.
     */
    public IndividualApplicantRequestBuilder externalId(String externalId) {
        individualApplicantRequest.setExternalId(externalId);
        return this;
    }

    /**
     * User profile information. Contains data about the person such as name, address, phone, email, etc.
     */
    public IndividualApplicantRequestBuilder individualProfile(ProfileResource individualProfile) {
        individualApplicantRequest.setIndividualProfile(individualProfile);
        return this;
    }

    /**
     * Market Place applicant information. Includes the customers history and the subscription type.
     */
    public IndividualApplicantRequestBuilder mktPlaceApplicant(MarketPlaceApplicantResource mktPlaceApplicant) {
        individualApplicantRequest.setMktPlaceApplicant(mktPlaceApplicant);
        return this;
    }

    /**
     * A list of social networks the applicant belongs to.
     */
    public IndividualApplicantRequestBuilder socialNetworks(List<SocialNetworkResource> socialNetworks) {
        individualApplicantRequest.setSocialNetworks(socialNetworks);
        return this;
    }

    /**
     * language used to communicate
     */
    public IndividualApplicantRequestBuilder language(String language) {
        individualApplicantRequest.setLanguage(language);
        return this;
    }

    /**
     * brand id of market place
     */
    public IndividualApplicantRequestBuilder brand(String brand) {
        individualApplicantRequest.setBrand(brand);
        return this;
    }

    public IndividualApplicantRequestBuilder consents(List<ApplicantConsentRequest> consents) {
        individualApplicantRequest.setConsents(consents);
        return this;
    }

    /**
     * The primary instrument of the applicant. By default, all the applicant level offerings will be linked to this instrument.
     */
    public IndividualApplicantRequestBuilder primaryInstrument(String primaryInstrument) {
        individualApplicantRequest.setPrimaryInstrument(primaryInstrument);
        return this;
    }

    /**
     * The reportingTag for the applicant.
     */
    public IndividualApplicantRequestBuilder reportingTag(String reportingTag) {
        individualApplicantRequest.setReportingTag(reportingTag);
        return this;
    }

    /**
     * Products requested by marketplace.
     */
    public IndividualApplicantRequestBuilder products(List<ProductEnum> products) {
        individualApplicantRequest.setProducts(products);
        return this;
    }

    public IndividualApplicantRequestBuilder proCategory(ProCategoryResource proCategory) {
        individualApplicantRequest.setProCategory(proCategory);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public IndividualApplicantRequest build() {
        return individualApplicantRequest;
    }
}