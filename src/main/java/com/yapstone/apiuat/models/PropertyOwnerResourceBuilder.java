/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;
import org.joda.time.LocalDate;

public class PropertyOwnerResourceBuilder {
    //the instance to build
    private PropertyOwnerResource propertyOwnerResource;

    /**
     * Default constructor to initialize the instance
     */
    public PropertyOwnerResourceBuilder() {
        propertyOwnerResource = new PropertyOwnerResource();
    }

    /**
     * How long has the customer owned an asset in the marketplace.
     */
    public PropertyOwnerResourceBuilder ownerSince(LocalDate ownerSince) {
        propertyOwnerResource.setOwnerSince(ownerSince);
        return this;
    }

    /**
     * The number of inquries.
     */
    public PropertyOwnerResourceBuilder inquiryCount(Integer inquiryCount) {
        propertyOwnerResource.setInquiryCount(inquiryCount);
        return this;
    }

    /**
     * The number of charges.
     */
    public PropertyOwnerResourceBuilder chargeCount(Integer chargeCount) {
        propertyOwnerResource.setChargeCount(chargeCount);
        return this;
    }

    /**
     * The number of ratings.
     */
    public PropertyOwnerResourceBuilder ratingCount(Integer ratingCount) {
        propertyOwnerResource.setRatingCount(ratingCount);
        return this;
    }

    /**
     * The rating of the asset for the owner.
     */
    public PropertyOwnerResourceBuilder rating(Double rating) {
        propertyOwnerResource.setRating(rating);
        return this;
    }

    /**
     * A money object defines the currency type and amount.
     */
    public PropertyOwnerResourceBuilder processingVolume(MoneyResource processingVolume) {
        propertyOwnerResource.setProcessingVolume(processingVolume);
        return this;
    }

    /**
     * A money object defines the currency type and amount.
     */
    public PropertyOwnerResourceBuilder estimatedVolume(MoneyResource estimatedVolume) {
        propertyOwnerResource.setEstimatedVolume(estimatedVolume);
        return this;
    }

    /**
     * The number of assets ownered.
     */
    public PropertyOwnerResourceBuilder assetCount(Integer assetCount) {
        propertyOwnerResource.setAssetCount(assetCount);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public PropertyOwnerResource build() {
        return propertyOwnerResource;
    }
}