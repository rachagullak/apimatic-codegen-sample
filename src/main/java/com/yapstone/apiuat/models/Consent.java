/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonSubTypes.Type;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.yapstone.apiuat.DateTimeHelper;
import org.joda.time.DateTime;

@JsonTypeInfo(
          use = JsonTypeInfo.Id.NAME,
          include = JsonTypeInfo.As.EXISTING_PROPERTY,
          property = "type",
          defaultImpl = Consent.class,
          visible = true)
@JsonSubTypes({
    @Type(value = DirectDebitConsentResource.class, name = "directDebitConsentResource")
})
@JsonInclude(Include.ALWAYS)
public class Consent 
        implements java.io.Serializable {
    private static final long serialVersionUID = -6763015617168726949L;
    private String type;
    private boolean accepted;
    private DateTime timeOfConsent;
    private int version = 1;
    private String ipAddress;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("type")
    public String getType ( ) { 
        return this.type;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("type")
    public void setType (String value) { 
        this.type = value;
    }
 
    /** GETTER
     * Indicates the acceptance of the T&Cs.
     */
    @JsonGetter("accepted")
    public boolean getAccepted ( ) { 
        return this.accepted;
    }
    
    /** SETTER
     * Indicates the acceptance of the T&Cs.
     */
    @JsonSetter("accepted")
    public void setAccepted (boolean value) { 
        this.accepted = value;
    }
 
    /** GETTER
     * Time of the consent
     */
    @JsonGetter("timeOfConsent")
    @JsonSerialize(using=DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public DateTime getTimeOfConsent ( ) { 
        return this.timeOfConsent;
    }
    
    /** SETTER
     * Time of the consent
     */
    @JsonSetter("timeOfConsent")
    @JsonDeserialize(using=DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setTimeOfConsent (DateTime value) { 
        this.timeOfConsent = value;
    }
 
    /** GETTER
     * Version of the consent
     */
    @JsonGetter("version")
    public int getVersion ( ) { 
        return this.version;
    }
    
    /** SETTER
     * Version of the consent
     */
    @JsonSetter("version")
    public void setVersion (int value) { 
        this.version = value;
    }
 
    /** GETTER
     * IP Address of machine from which consent was given
     */
    @JsonGetter("ipAddress")
    public String getIpAddress ( ) { 
        return this.ipAddress;
    }
    
    /** SETTER
     * IP Address of machine from which consent was given
     */
    @JsonSetter("ipAddress")
    public void setIpAddress (String value) { 
        this.ipAddress = value;
    }
 
}
