/*
 * YapstoneStagedOnBoardingServicesLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.yapstone.apiuat.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@JsonInclude(Include.ALWAYS)
public class OfferingResource 
        implements java.io.Serializable {
    private static final long serialVersionUID = 7273292359491214915L;
    private String offeringId;
    private String offeringName;
    private String aliasFor;
    private String instrumentId;
    private String groupId;
    private Boolean escrowFlag;
    private Boolean isDefault;
    private String softDescriptor;
    private String associatedEntity;
    private EntityRef entityRef;
    private Object metaData;
    /** GETTER
     * Id of the given offering.
     */
    @JsonGetter("offeringId")
    public String getOfferingId ( ) { 
        return this.offeringId;
    }
    
    /** SETTER
     * Id of the given offering.
     */
    @JsonSetter("offeringId")
    public void setOfferingId (String value) { 
        this.offeringId = value;
    }
 
    /** GETTER
     * Name of the offering.
     */
    @JsonGetter("offeringName")
    public String getOfferingName ( ) { 
        return this.offeringName;
    }
    
    /** SETTER
     * Name of the offering.
     */
    @JsonSetter("offeringName")
    public void setOfferingName (String value) { 
        this.offeringName = value;
    }
 
    /** GETTER
     * Aliase for a given offering.
     */
    @JsonGetter("aliasFor")
    public String getAliasFor ( ) { 
        return this.aliasFor;
    }
    
    /** SETTER
     * Aliase for a given offering.
     */
    @JsonSetter("aliasFor")
    public void setAliasFor (String value) { 
        this.aliasFor = value;
    }
 
    /** GETTER
     * Id of the given instrument to which the offering is associated with.
     */
    @JsonGetter("instrumentId")
    public String getInstrumentId ( ) { 
        return this.instrumentId;
    }
    
    /** SETTER
     * Id of the given instrument to which the offering is associated with.
     */
    @JsonSetter("instrumentId")
    public void setInstrumentId (String value) { 
        this.instrumentId = value;
    }
 
    /** GETTER
     * Group to which the offering belongs to
     */
    @JsonGetter("groupId")
    public String getGroupId ( ) { 
        return this.groupId;
    }
    
    /** SETTER
     * Group to which the offering belongs to
     */
    @JsonSetter("groupId")
    public void setGroupId (String value) { 
        this.groupId = value;
    }
 
    /** GETTER
     * Flag which decides whether this offering can be paid advanced or checkin.
     */
    @JsonGetter("escrowFlag")
    public Boolean getEscrowFlag ( ) { 
        return this.escrowFlag;
    }
    
    /** SETTER
     * Flag which decides whether this offering can be paid advanced or checkin.
     */
    @JsonSetter("escrowFlag")
    public void setEscrowFlag (Boolean value) { 
        this.escrowFlag = value;
    }
 
    /** GETTER
     * Indicates if this is the default Offering set up for the assetListing
     */
    @JsonGetter("isDefault")
    public Boolean getIsDefault ( ) { 
        return this.isDefault;
    }
    
    /** SETTER
     * Indicates if this is the default Offering set up for the assetListing
     */
    @JsonSetter("isDefault")
    public void setIsDefault (Boolean value) { 
        this.isDefault = value;
    }
 
    /** GETTER
     * The text to be send to the processor for displaying on the statement.
     */
    @JsonGetter("softDescriptor")
    public String getSoftDescriptor ( ) { 
        return this.softDescriptor;
    }
    
    /** SETTER
     * The text to be send to the processor for displaying on the statement.
     */
    @JsonSetter("softDescriptor")
    public void setSoftDescriptor (String value) { 
        this.softDescriptor = value;
    }
 
    /** GETTER
     * Entity where the offerings will be attached to.
     */
    @JsonGetter("associatedEntity")
    public String getAssociatedEntity ( ) { 
        return this.associatedEntity;
    }
    
    /** SETTER
     * Entity where the offerings will be attached to.
     */
    @JsonSetter("associatedEntity")
    public void setAssociatedEntity (String value) { 
        this.associatedEntity = value;
    }
 
    /** GETTER
     * Entity reference
     */
    @JsonGetter("entityRef")
    public EntityRef getEntityRef ( ) { 
        return this.entityRef;
    }
    
    /** SETTER
     * Entity reference
     */
    @JsonSetter("entityRef")
    public void setEntityRef (EntityRef value) { 
        this.entityRef = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("metaData")
    public Object getMetaData ( ) { 
        return this.metaData;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("metaData")
    public void setMetaData (Object value) { 
        this.metaData = value;
    }
 
}
